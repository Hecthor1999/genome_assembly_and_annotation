#!/bin/bash
#SBATCH --time=20:00:00
#SBATCH --mem=30G
#SBATCH -p pibu_el8
#SBATCH --nodes=1
#SBATCH --cpus-per-task=20
#SBATCH --job-name=interproscan
#SBATCH --output=log/interproscan_%j.out
#SBATCH --error=log/interproscan_%j.err

module load UCSC-Utils/448-foss-2021a
module load BioPerl/1.7.8-GCCcore-10.3.0
module load MariaDB/10.6.4-GCC-10.3.0
module load SeqKit/2.6.1

# workind directory
WORKDIR="/data/users/harribas/assembly_course/annotation/output/final"
COURSEDIR="/data/courses/assembly-annotation-course/CDS_annotation"
MAKERBIN="$COURSEDIR/softwares/Maker_v3.01.03/src/bin"

protein="assembly.all.maker.proteins.fasta"
transcript="assembly.all.maker.transcripts.fasta"
gff="assembly.all.maker.noseq.gff"

# go to working directory
cd $WORKDIR

apptainer exec \
--bind $COURSEDIR/data/interproscan-5.70-102.0/data:/opt/interproscan/data \
--bind $WORKDIR \
--bind $COURSEDIR \
--bind $SCRATCH:/temp \
$COURSEDIR/containers/interproscan_latest.sif \
/opt/interproscan/interproscan.sh \
-appl pfam \
--disable-precalc \
-f TSV \
--goterms \
--iprlookup \
--seqtype p \
-i ${protein}.renamed.fasta \
-o output.iprscan


# Incorporate the InterProScan functional annotations into the GFF3 file using the ipr_update_gff tool.
$MAKERBIN/ipr_update_gff ${gff}.renamed.gff output.iprscan > ${gff}.renamed.iprscan.gff


# Use MAKERâ€™s AED_cdf_generator.pl to generate AED values for all annotations.
perl $MAKERBIN/AED_cdf_generator.pl -b 0.025 ${gff}.renamed.gff > assembly.all.maker.renamed.gff.AED.txt

# Filter the gff file based on AED values and Pfam domains
# perl $MAKERBIN/quality_filter.pl -s ${gff}.renamed.iprscan.gff > ${gff}_iprscan_quality_filtered.gff
# We have to filter the gff file based on the AED values which are =< 0.5 
perl $MAKERBIN/quality_filter.pl -a 0.5 ${gff}.renamed.iprscan.gff > ${gff}_iprscan_quality_filtered.gff


#The gff also contains other features like Repeats, and match hints from different sources of evidence
# Let's see what are the different types of features in the gff file
cut -f3 ${gff}_iprscan_quality_filtered.gff | sort | uniq

# We only want to keep gene features in the third column of the gff file
grep -P "\tgene\t|\tCDS\t|\texon\t|\tfive_prime_UTR\t|\tthree_prime_UTR\t|\tmRNA\t" ${gff}_iprscan_quality_filtered.gff > filtered.genes.renamed.gff3
cut -f3 filtered.genes.renamed.gff3 | sort | uniq

# We need to add back the gff3 header to the filtered gff file so that it can be used by other tools
grep "^#" ${gff}_iprscan_quality_filtered.gff > header.txt
cat header.txt filtered.genes.renamed.gff3 > filtered.genes.renamed.final.gff3

# Get the names of remaining mRNAs and extract them from the transcript ands their proteins from the protein files
grep -P "\tmRNA\t" filtered.genes.renamed.final.gff3 | awk '{print $9}' | cut -d ';' -f1 | sed 's/ID=//g' >mRNA_list.txt
faSomeRecords ${transcript}.renamed.fasta mRNA_list.txt ${transcript}.renamed.filtered.fasta
faSomeRecords ${protein}.renamed.fasta mRNA_list.txt ${protein}.renamed.filtered.fasta

# to visualize the number of proteins obtained after filtering
# seqkit stats assembly.all.maker.proteins.fasta.renamed.filtered.fasta
# file                                                      format  type     num_seqs     sum_len  min_len  avg_len  max_len
# assembly.all.maker.proteins.fasta.renamed.filtered.fasta  FASTA   Protein    30,087  12,837,511        1    426.7   28,953
#